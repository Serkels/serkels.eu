{"version":3,"sources":["../../src/infra/trpc.context.ts"],"sourcesContent":["//\n\nimport { initTRPC } from \"@trpc/server\";\nimport type { OpenAPI_Repository } from \"./openapi.repository\";\n\n//\n\nexport class OpenapiTrpc<Client> {\n  t = initTRPC.context<{ openapi: OpenAPI_Repository<Client> }>().create();\n  router = this.t.router;\n  procedure = this.t.procedure;\n}\n\n// export const createContext = async (opts: CreateNextContextOptions) => {\n//   const session = await getSession({ req: opts.req });\n\n//   return {\n//     openapi: new OpenAPI_Repository(fromServer, session?.user?.jwt),\n//     session,\n//   };\n// };\n// export type TRPCContext<Client> = {\n//   openapi: OpenAPI_Repository<Client>;\n//   session: {} | null;\n// };\n\n// export const TrpcContext = initTRPC.context<TRPCContext<Client>>()\n// .context<TRPCContext>()\n// .create({\n//   transformer: SuperJSON,\n//   errorFormatter: ({ shape, error }) => ({\n//     ...shape,\n//     data: {\n//       ...shape.data,\n//       zodError:\n//         error.cause instanceof ZodError ? error.cause.flatten() : null,\n//     },\n//   }),\n// })\n"],"names":["initTRPC","OpenapiTrpc","t","context","create","router","procedure"],"mappings":"AAAA,EAAE;AAEF,SAASA,QAAQ,QAAQ,eAAe;AAGxC,EAAE;AAEF,OAAO,MAAMC;IACXC,IAAIF,SAASG,OAAO,GAA4CC,MAAM,GAAG;IACzEC,SAAS,IAAI,CAACH,CAAC,CAACG,MAAM,CAAC;IACvBC,YAAY,IAAI,CAACJ,CAAC,CAACI,SAAS,CAAC;AAC/B,CAAC,CAED,2EAA2E;CAC3E,yDAAyD;CAEzD,aAAa;CACb,uEAAuE;CACvE,eAAe;CACf,OAAO;CACP,KAAK;CACL,sCAAsC;CACtC,yCAAyC;CACzC,wBAAwB;CACxB,KAAK;CAEL,qEAAqE;CACrE,0BAA0B;CAC1B,YAAY;CACZ,4BAA4B;CAC5B,6CAA6C;CAC7C,gBAAgB;CAChB,cAAc;CACd,uBAAuB;CACvB,kBAAkB;CAClB,0EAA0E;CAC1E,SAAS;CACT,QAAQ;CACR,KAAK"}