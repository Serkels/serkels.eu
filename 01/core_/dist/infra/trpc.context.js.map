{"version":3,"sources":["../../src/infra/trpc.context.ts"],"sourcesContent":["//\n\nimport type { OpenAPI_Repository } from \"./openapi.repository\";\n\n//\n// export const createContext = async (opts: CreateNextContextOptions) => {\n//   const session = await getSession({ req: opts.req });\n\n//   return {\n//     openapi: new OpenAPI_Repository(fromServer, session?.user?.jwt),\n//     session,\n//   };\n// };\nexport type TRPCContext<Client> = {\n  openapi: OpenAPI_Repository<Client>;\n  session: {} | null;\n};\n\n// export const TrpcContext = () => initTRPC\n// .context<TRPCContext>()\n// .create({\n//   transformer: SuperJSON,\n//   errorFormatter: ({ shape, error }) => ({\n//     ...shape,\n//     data: {\n//       ...shape.data,\n//       zodError:\n//         error.cause instanceof ZodError ? error.cause.flatten() : null,\n//     },\n//   }),\n// })\n"],"names":[],"mappings":"AAAA,EAAE;AAEF,WAcE,CAEF,4CAA4C;CAC5C,0BAA0B;CAC1B,YAAY;CACZ,4BAA4B;CAC5B,6CAA6C;CAC7C,gBAAgB;CAChB,cAAc;CACd,uBAAuB;CACvB,kBAAkB;CAClB,0EAA0E;CAC1E,SAAS;CACT,QAAQ;CACR,KAAK"}