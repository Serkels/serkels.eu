{"version":3,"sources":["../../src/infra/openapi.repository.ts"],"sourcesContent":["//\n\nimport { TRPCError } from \"@trpc/server\";\nimport debug from \"debug\";\nimport type { FetchResponse } from \"openapi-fetch\";\nimport { Lifecycle, inject, scoped } from \"tsyringe\";\n\n//\n\n@scoped(Lifecycle.ContainerScoped)\nexport class OpenAPI_Repository<Client> {\n  #log = debug(`~:corre:infra:OpenAPI_Repository`);\n\n  static readonly TOKEN = {\n    CLIENT: Symbol.for(\"client\"),\n    JWT: Symbol.for(\"jwt\"),\n  };\n\n  constructor(\n    @inject(OpenAPI_Repository.TOKEN.CLIENT) public readonly client: Client,\n    @inject(OpenAPI_Repository.TOKEN.JWT) public readonly jwt?: string,\n  ) {\n    this.#log(\"new\", Boolean(jwt) ? \"üóùÔ∏è\" : \"üîí\");\n    if (jwt) {\n      this.headers.set(\"Authorization\", `Bearer ${this.jwt}`);\n      this.#log(\"üé©\");\n    }\n  }\n\n  readonly headers = new Headers();\n\n  async fetch<T>(fetch_response: Promise<FetchResponse<T>>) {\n    const trace = this.#log.extend(\"fetch\");\n\n    const { data, error: errorBody, response } = await fetch_response;\n\n    trace(`${response.url} ${response.status}`);\n    if (errorBody) {\n      trace(\"ERROR\", errorBody);\n      const { error } = errorBody as any as { error: Error };\n      throw new TRPCError({\n        code: \"INTERNAL_SERVER_ERROR\",\n        message: [error.message, \"from \" + response.url].join(\"\\n\"),\n        cause: error,\n      });\n    }\n    return data;\n  }\n}\n"],"names":["TRPCError","debug","Lifecycle","inject","scoped","OpenAPI_Repository","client","jwt","log","TOKEN","CLIENT","Symbol","for","JWT","constructor","headers","Headers","Boolean","set","fetch","fetch_response","trace","extend","data","error","errorBody","response","url","status","code","message","join","cause","ContainerScoped"],"mappings":"AAAA,EAAE;;;;;;;;;;;;;;;AAEF,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAOC,WAAW,QAAQ;AAE1B,SAASC,SAAS,EAAEC,MAAM,EAAEC,MAAM,QAAQ,WAAW;AAKrD,WAAaC,qBAAN;IASsDC;IACHC;IATxD,CAACC,GAAG,CAA6C;IAEjD,OAAgBC,QAAQ;QACtBC,QAAQC,OAAOC,GAAG,CAAC;QACnBC,KAAKF,OAAOC,GAAG,CAAC;IAClB,EAAE;IAEFE,YAC2DR,QACHC,IACtD;sBAFyDD;mBACHC;aATxD,CAACC,GAAG,GAAGP,MAAM,CAAC,gCAAgC,CAAC;aAkBtCc,UAAU,IAAIC;QAPrB,IAAI,CAAC,CAACR,GAAG,CAAC,OAAOS,QAAQV,OAAO,QAAQ,IAAI;QAC5C,IAAIA,KAAK;YACP,IAAI,CAACQ,OAAO,CAACG,GAAG,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAACX,GAAG,CAAC,CAAC;YACtD,IAAI,CAAC,CAACC,GAAG,CAAC;QACZ,CAAC;IACH;IAESO,QAAwB;IAEjC,MAAMI,MAASC,cAAyC,EAAE;QACxD,MAAMC,QAAQ,IAAI,CAAC,CAACb,GAAG,CAACc,MAAM,CAAC;QAE/B,MAAM,EAAEC,KAAI,EAAEC,OAAOC,UAAS,EAAEC,SAAQ,EAAE,GAAG,MAAMN;QAEnDC,MAAM,CAAC,EAAEK,SAASC,GAAG,CAAC,CAAC,EAAED,SAASE,MAAM,CAAC,CAAC;QAC1C,IAAIH,WAAW;YACbJ,MAAM,SAASI;YACf,MAAM,EAAED,MAAK,EAAE,GAAGC;YAClB,MAAM,IAAIzB,UAAU;gBAClB6B,MAAM;gBACNC,SAAS;oBAACN,MAAMM,OAAO;oBAAE,UAAUJ,SAASC,GAAG;iBAAC,CAACI,IAAI,CAAC;gBACtDC,OAAOR;YACT,GAAG;QACL,CAAC;QACD,OAAOD;IACT;AACF,EAAC;AAtCYlB;IADZD,OAAOF,UAAU+B,eAAe;IAU5B9B,aAAAA,OAAOE,mBAAmBI,KAAK,CAACC,MAAM;IACtCP,aAAAA,OAAOE,mBAAmBI,KAAK,CAACI,GAAG;;;eAD6B,kCAAA;;;GATxDR"}