/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/answer/{id}": {
    get: operations["get/answer/{id}"];
    put: operations["post/answer/{id}"];
    delete: operations["delete/answer/{id}"];
  };
  "/auth/{provider}/callback": {
    /** Default Callback from provider auth */
    get: {
      parameters: {
        path: {
          /** @description Provider name */
          provider: string;
        };
      };
      responses: {
        /** @description Returns a jwt token and user info */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-UserRegistration"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/auth/change-password": {
    /** Update user's own password */
    post: {
      requestBody: {
        content: {
          "application/json": {
            currentPassword: string;
            password: string;
            passwordConfirmation: string;
          };
        };
      };
      responses: {
        /** @description Returns a jwt token and user info */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-UserRegistration"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/auth/email-confirmation": {
    /** Confirm user email */
    get: {
      parameters: {
        query?: {
          /** @description confirmation token received by email */
          confirmation?: string;
        };
      };
      responses: {
        /** @description Redirects to the configure email confirmation redirect url */
        301: {
          content: never;
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/auth/forgot-password": {
    /** Send rest password email */
    post: {
      requestBody: {
        content: {
          /**
           * @example {
           *   "email": "foo.bar@strapi.io"
           * }
           */
          "application/json": {
            email?: string;
          };
        };
      };
      responses: {
        /** @description Returns ok */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              ok?: true;
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/auth/local": {
    /**
     * Local login
     * @description Returns a jwt token and user info
     */
    post: {
      requestBody: {
        content: {
          /**
           * @example {
           *   "identifier": "foobar",
           *   "password": "Test1234"
           * }
           */
          "application/json": {
            identifier?: string;
            password?: string;
          };
        };
      };
      responses: {
        /** @description Connection */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-UserRegistration"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/auth/local/register": {
    /**
     * Register a user
     * @description Returns a jwt token and user info
     */
    post: {
      requestBody: {
        content: {
          /**
           * @example {
           *   "username": "foobar",
           *   "email": "foo.bar@strapi.io",
           *   "password": "Test1234"
           * }
           */
          "application/json": {
            email?: string;
            password?: string;
            username?: string;
          };
        };
      };
      responses: {
        /** @description Successful registration */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-UserRegistration"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/auth/reset-password": {
    /** Rest user password */
    post: {
      requestBody: {
        content: {
          /**
           * @example {
           *   "password": "Test1234",
           *   "passwordConfirmation": "Test1234",
           *   "code": "zertyoaizndoianzodianzdonaizdoinaozdnia"
           * }
           */
          "application/json": {
            code?: string;
            password?: string;
            passwordConfirmation?: string;
          };
        };
      };
      responses: {
        /** @description Returns a jwt token and user info */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-UserRegistration"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/auth/send-email-confirmation": {
    /** Send confirmation email */
    post: {
      requestBody: {
        content: {
          "application/json": {
            email?: string;
          };
        };
      };
      responses: {
        /** @description Returns email and boolean to confirm email was sent */
        200: {
          content: {
            "application/json": {
              email?: string;
              /** @enum {string} */
              sent?: true;
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/bookmark/exchanges": {
    get: operations["get/bookmark/exchanges"];
  };
  "/bookmark/exchanges/{id}": {
    get: operations["get/bookmark/exchanges/{id}"];
    post: operations["post/bookmark/exchanges/{id}"];
    delete: operations["delete/bookmark/exchanges/{id}"];
  };
  "/bookmark/opportunities": {
    get: operations["get/bookmark/opportunities"];
  };
  "/bookmark/opportunities/{id}": {
    get: operations["get/bookmark/opportunities/{id}"];
    post: operations["post/bookmark/opportunities/{id}"];
    delete: operations["delete/bookmark/opportunities/{id}"];
  };
  "/bookmarks": {
    get: operations["get/bookmarks"];
    post: operations["post/bookmarks"];
  };
  "/bookmarks/{id}": {
    get: operations["get/bookmarks/{id}"];
    put: operations["put/bookmarks/{id}"];
    delete: operations["delete/bookmarks/{id}"];
  };
  "/categories": {
    get: operations["get/categories"];
    post: operations["post/categories"];
  };
  "/categories;exchange": {
    get: operations["get/categories;exchange"];
  };
  "/categories;opportunity": {
    get: operations["get/categories;opportunity"];
  };
  "/categories;question": {
    get: operations["get/categories;question"];
  };
  "/categories/{id}": {
    get: operations["get/categories/{id}"];
    put: operations["put/categories/{id}"];
    delete: operations["delete/categories/{id}"];
  };
  "/category-exchange": {
    get: operations["get/category-exchange"];
    put: operations["put/category-exchange"];
    delete: operations["delete/category-exchange"];
  };
  "/category-opportunity": {
    get: operations["get/category-opportunity"];
    put: operations["put/category-opportunity"];
    delete: operations["delete/category-opportunity"];
  };
  "/category-question": {
    get: operations["get/category-question"];
    put: operations["put/category-question"];
    delete: operations["delete/category-question"];
  };
  "/comments/{relation}/comment/{commentId}": {
    put: operations["put/comments/{relation}/comment/{commentId}"];
    delete: operations["delete/comments/{relation}/comment/{commentId}"];
  };
  "/comments/{relation}/comment/{commentId}/report-abuse": {
    post: operations["post/comments/{relation}/comment/{commentId}/report-abuse"];
  };
  "/connect/{provider}": {
    /**
     * Login with a provider
     * @description Redirects to provider login before being redirect to /auth/{provider}/callback
     */
    get: {
      parameters: {
        path: {
          /** @description Provider name */
          provider: string;
        };
      };
      responses: {
        /** @description Redirect response */
        301: {
          content: never;
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/deals/{id}/messages": {
    get: operations["get/deals/{id}/messages"];
    post: operations["post/deals/{id}/messages"];
  };
  "/deals/{id}/messages/{id}": {
    get: operations["get/deals/{id}/messages/{id}"];
    delete: operations["delete/deals/{id}/messages/{id}"];
  };
  "/exchange-deals": {
    post: operations["post/exchange-deals"];
  };
  "/exchange-deals/{id}": {
    get: operations["get/exchange-deals/{id}"];
  };
  "/exchanges": {
    get: operations["get/exchanges"];
    post: operations["post/exchanges"];
  };
  "/exchanges/{id}": {
    get: operations["get/exchanges/{id}"];
    put: operations["put/exchanges/{id}"];
    delete: operations["delete/exchanges/{id}"];
  };
  "/exchanges/{id}/deals": {
    get: operations["get/exchanges/{id}/deals"];
  };
  "/i18n/locales": {
    get: operations["get/i18n/locales"];
  };
  "/inbox/{id}/messages": {
    get: operations["get/inbox/{id}/messages"];
    post: operations["post/inbox/{id}/messages"];
  };
  "/inbox/{id}/messages/{id}": {
    get: operations["get/inbox/{id}/messages/{id}"];
    delete: operations["delete/inbox/{id}/messages/{id}"];
  };
  "/inbox/to/{profile_id}": {
    post: operations["post/inbox/to/{profile_id}"];
  };
  "/inboxes": {
    get: operations["get/inboxes"];
  };
  "/inboxes/{id}": {
    get: operations["get/inboxes/{id}"];
  };
  "/my/exchanges": {
    get: operations["get/my/exchange"];
  };
  "/opportunities": {
    get: operations["get/opportunities"];
    post: operations["post/opportunities"];
  };
  "/opportunities/{id}": {
    get: operations["get/opportunities/{id}"];
    put: operations["put/opportunities/{id}"];
    delete: operations["delete/opportunities/{id}"];
  };
  "/opportunities/{id}/localizations": {
    post: operations["post/opportunities/{id}/localizations"];
  };
  "/opportunity-categories": {
    get: operations["get/opportunity-categories"];
  };
  "/opportunity-categories/{id}/localizations": {
    post: operations["post/opportunity-categories/{id}/localizations"];
  };
  "/partners": {
    get: operations["get/partners"];
    post: operations["post/partners"];
  };
  "/partners/{id}": {
    get: operations["get/partners/{id}"];
    put: operations["put/partners/{id}"];
    delete: operations["delete/partners/{id}"];
  };
  "/partners/me": {
    get: operations["get/partners/me"];
    put: operations["put/partners/me"];
  };
  "/passwordless/login": {
    /** Login a user with one time password */
    get: {
      parameters: {
        query: {
          /** @description Login token from the email */
          loginToken: string;
        };
      };
      responses: {
        /** @description Connection */
        200: {
          content: {
            "application/json": components["schemas"]["Passwordless-User"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/passwordless/send-link": {
    /** Send an email to user with login link */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Passwordless-SendLinkRequest"];
        };
      };
      responses: {
        /** @description Returns email and boolean to confirm email was sent */
        200: {
          content: {
            "application/json": components["schemas"]["Passwordless-EmailSent"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/question/{id}/answers": {
    get: operations["get/question/{id}/answers"];
    post: operations["post/question/{id}/answers"];
  };
  "/question/{id}/answers/count": {
    get: operations["get/question/{id}/answers/count"];
  };
  "/questions": {
    get: operations["get/questions"];
    post: operations["post/questions"];
  };
  "/questions/{id}": {
    get: operations["get/questions/{id}"];
    put: operations["put/questions/{id}"];
    delete: operations["delete/questions/{id}"];
  };
  "/tags": {
    get: operations["get/tags"];
    post: operations["post/tags"];
  };
  "/tags/{id}": {
    get: operations["get/tags/{id}"];
    put: operations["put/tags/{id}"];
    delete: operations["delete/tags/{id}"];
  };
  "/tags/{id}/localizations": {
    post: operations["post/tags/{id}/localizations"];
  };
  "/thread/{id}/messages": {
    get: operations["get/thread/{id}/messages"];
    post: operations["post/thread/{id}/messages"];
  };
  "/threads": {
    get: operations["get/threads"];
    post: operations["post/threads"];
  };
  "/threads/{id}": {
    get: operations["get/threads/{id}"];
    put: operations["put/threads/{id}"];
    delete: operations["delete/threads/{id}"];
  };
  "/upload": {
    /** @description Upload files */
    post: {
      /** @description Upload files */
      requestBody: {
        content: {
          "multipart/form-data": {
            /** @description The field of the entry which the file(s) will be precisely linked to. */
            field?: string;
            files: string[];
            /** @description The folder where the file(s) will be uploaded to (only supported on strapi-provider-upload-aws-s3). */
            path?: string;
            /** @description The unique ID (uid) of the model which the file(s) will be linked to (api::restaurant.restaurant). */
            ref?: string;
            /** @description The ID of the entry which the file(s) will be linked to */
            refId?: string;
          };
        };
      };
      responses: {
        /** @description response */
        200: {
          content: {
            "application/json": components["schemas"]["UploadFile"][];
          };
        };
      };
    };
  };
  "/upload?id={id}": {
    /** @description Upload file information */
    post: {
      parameters: {
        query: {
          /** @description File id */
          id: string;
        };
      };
      /** @description Upload files */
      requestBody: {
        content: {
          "multipart/form-data": {
            fileInfo?: {
              alternativeText?: string;
              caption?: string;
              name?: string;
            };
            /** Format: binary */
            files?: string;
          };
        };
      };
      responses: {
        /** @description response */
        200: {
          content: {
            "application/json": components["schemas"]["UploadFile"][];
          };
        };
      };
    };
  };
  "/upload/files": {
    get: {
      responses: {
        /** @description Get a list of files */
        200: {
          content: {
            "application/json": components["schemas"]["UploadFile"][];
          };
        };
      };
    };
  };
  "/upload/files/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Get a specific file */
        200: {
          content: {
            "application/json": components["schemas"]["UploadFile"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Delete a file */
        200: {
          content: {
            "application/json": components["schemas"]["UploadFile"];
          };
        };
      };
    };
  };
  "/user-profiles": {
    get: operations["get/user-profiles"];
    post: operations["post/user-profiles"];
  };
  "/user-profiles/{id}": {
    get: operations["get/user-profiles/{id}"];
    put: operations["put/user-profiles/{id}"];
    delete: operations["delete/user-profiles/{id}"];
  };
  "/user-profiles/me": {
    get: operations["get/user-profiles/me"];
    put: operations["put/user-profiles/me"];
  };
  "/user-profiles/me/contacts": {
    get: operations["get/user-profiles/me/contacts"];
  };
  "/users": {
    /** Get list of users */
    get: {
      responses: {
        /** @description Returns an array of users */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-User"][];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Create a user */
    post: {
      requestBody: {
        content: {
          /**
           * @example {
           *   "username": "foo",
           *   "email": "foo@strapi.io",
           *   "password": "foo-password"
           * }
           */
          "application/json": {
            email: string;
            password: string;
            username: string;
          };
        };
      };
      responses: {
        /** @description Returns created user info */
        201: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-User"] & {
              role?: components["schemas"]["Users-Permissions-Role"];
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users-permissions/permissions": {
    /** Get default generated permissions */
    get: {
      responses: {
        /** @description Returns the permissions tree */
        200: {
          content: {
            "application/json": {
              permissions?: components["schemas"]["Users-Permissions-PermissionsTree"];
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users-permissions/roles": {
    /** List roles */
    get: {
      responses: {
        /** @description Returns list of roles */
        200: {
          content: {
            "application/json": {
              roles?: (components["schemas"]["Users-Permissions-Role"] & {
                  nb_users?: number;
                })[];
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Create a role */
    post: {
      requestBody: components["requestBodies"]["Users-Permissions-RoleRequest"];
      responses: {
        /** @description Returns ok if the role was create */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              ok?: true;
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users-permissions/roles/{id}": {
    /** Get a role */
    get: {
      parameters: {
        path: {
          /** @description role Id */
          id: string;
        };
      };
      responses: {
        /** @description Returns the role */
        200: {
          content: {
            "application/json": {
              role?: components["schemas"]["Users-Permissions-Role"];
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users-permissions/roles/{role}": {
    /** Update a role */
    put: {
      parameters: {
        path: {
          /** @description role Id */
          role: string;
        };
      };
      requestBody: components["requestBodies"]["Users-Permissions-RoleRequest"];
      responses: {
        /** @description Returns ok if the role was udpated */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              ok?: true;
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Delete a role */
    delete: {
      parameters: {
        path: {
          /** @description role Id */
          role: string;
        };
      };
      responses: {
        /** @description Returns ok if the role was delete */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              ok?: true;
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users/{id}": {
    /** Get a user */
    get: {
      parameters: {
        path: {
          /** @description user Id */
          id: string;
        };
      };
      responses: {
        /** @description Returns a user */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-User"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Update a user */
    put: {
      parameters: {
        path: {
          /** @description user Id */
          id: string;
        };
      };
      requestBody: {
        content: {
          /**
           * @example {
           *   "username": "foo",
           *   "email": "foo@strapi.io",
           *   "password": "foo-password"
           * }
           */
          "application/json": {
            email: string;
            password: string;
            username: string;
          };
        };
      };
      responses: {
        /** @description Returns updated user info */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-User"] & {
              role?: components["schemas"]["Users-Permissions-Role"];
            };
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Delete a user */
    delete: {
      parameters: {
        path: {
          /** @description user Id */
          id: string;
        };
      };
      responses: {
        /** @description Returns deleted user info */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-User"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users/count": {
    /** Get user count */
    get: {
      responses: {
        /** @description Returns a number */
        200: {
          content: {
            "application/json": number;
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users/me": {
    /** Get authenticated user info */
    get: {
      responses: {
        /** @description Returns user info */
        200: {
          content: {
            "application/json": components["schemas"]["Users-Permissions-User"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Bookmark: {
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      exchanges?: {
        data?: ({
            attributes?: {
              available_places?: number;
              category?: {
                data?: {
                  attributes?: {
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    name?: string;
                    slug?: string;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                };
              };
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              description?: string;
              in_exchange_of?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              is_online?: boolean;
              location?: string;
              owner?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              places?: number;
              profile?: {
                data?: {
                  attributes?: {
                    about?: string;
                    contacts?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    firstname?: string;
                    image?: {
                      data?: {
                        attributes?: {
                          alternativeText?: string;
                          caption?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          ext?: string;
                          folder?: {
                            data?: {
                              attributes?: {
                                children?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                files?: {
                                  data?: {
                                      attributes?: {
                                        alternativeText?: string;
                                        caption?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        ext?: string;
                                        folder?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        folderPath?: string;
                                        formats?: unknown;
                                        hash?: string;
                                        height?: number;
                                        mime?: string;
                                        name?: string;
                                        previewUrl?: string;
                                        provider?: string;
                                        provider_metadata?: unknown;
                                        related?: {
                                          data?: {
                                              attributes?: Record<string, unknown>;
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: float */
                                        size?: number;
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        url?: string;
                                        width?: number;
                                      };
                                      id?: number;
                                    }[];
                                };
                                name?: string;
                                parent?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                path?: string;
                                pathId?: number;
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                              };
                              id?: number;
                            };
                          };
                          folderPath?: string;
                          formats?: unknown;
                          hash?: string;
                          height?: number;
                          mime?: string;
                          name?: string;
                          previewUrl?: string;
                          provider?: string;
                          provider_metadata?: unknown;
                          related?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: float */
                          size?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          url?: string;
                          width?: number;
                        };
                        id?: number;
                      };
                    };
                    lastname?: string;
                    owner?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    university?: string;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                };
              };
              slug?: string;
              title?: string;
              /** @enum {string} */
              type?: "proposal" | "research";
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              /** Format: date */
              when?: string;
            };
            id?: number;
          })[];
      };
      opportunities?: {
        data?: {
            attributes?: {
              category?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              cover?: {
                data?: {
                  attributes?: {
                    alternativeText?: string;
                    caption?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    ext?: string;
                    folder?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    folderPath?: string;
                    formats?: unknown;
                    hash?: string;
                    height?: number;
                    mime?: string;
                    name?: string;
                    previewUrl?: string;
                    provider?: string;
                    provider_metadata?: unknown;
                    related?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    /** Format: float */
                    size?: number;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    url?: string;
                    width?: number;
                  };
                  id?: number;
                };
              };
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              description?: string;
              /** Format: date */
              expireAt?: string;
              link?: string;
              locale?: string;
              localizations?: {
                data?: unknown[];
              };
              location?: string;
              partner?: {
                data?: {
                  attributes?: {
                    avatar?: {
                      data?: {
                        attributes?: {
                          alternativeText?: string;
                          caption?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          ext?: string;
                          folder?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          folderPath?: string;
                          formats?: unknown;
                          hash?: string;
                          height?: number;
                          mime?: string;
                          name?: string;
                          previewUrl?: string;
                          provider?: string;
                          provider_metadata?: unknown;
                          related?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: float */
                          size?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          url?: string;
                          width?: number;
                        };
                        id?: number;
                      };
                    };
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    description?: string;
                    /** Format: email */
                    email?: string;
                    location?: string;
                    name?: string;
                    opportunities?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    owner?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    profile?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** Format: date-time */
                    publishedAt?: string;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    website?: string;
                  };
                  id?: number;
                };
              };
              profile?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              slug?: string;
              title?: string;
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      owner?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            confirmationToken?: string;
            confirmed?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            provider?: string;
            resetPasswordToken?: string;
            role?: {
              data?: {
                attributes?: {
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  description?: string;
                  name?: string;
                  permissions?: {
                    data?: {
                        attributes?: {
                          action?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: {
                                blocked?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: email */
                                email?: string;
                                firstname?: string;
                                isActive?: boolean;
                                lastname?: string;
                                preferedLanguage?: string;
                                registrationToken?: string;
                                resetPasswordToken?: string;
                                roles?: {
                                  data?: {
                                      attributes?: {
                                        code?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        description?: string;
                                        name?: string;
                                        permissions?: {
                                          data?: {
                                              attributes?: {
                                                action?: string;
                                                conditions?: unknown;
                                                /** Format: date-time */
                                                createdAt?: string;
                                                createdBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                properties?: unknown;
                                                role?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                subject?: string;
                                                /** Format: date-time */
                                                updatedAt?: string;
                                                updatedBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                              };
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        users?: {
                                          data?: {
                                              attributes?: Record<string, unknown>;
                                              id?: number;
                                            }[];
                                        };
                                      };
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                username?: string;
                              };
                              id?: number;
                            };
                          };
                          role?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      }[];
                  };
                  type?: string;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  users?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                };
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    BookmarkListResponse: {
      data?: components["schemas"]["BookmarkListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    BookmarkListResponseDataItem: {
      attributes?: components["schemas"]["Bookmark"];
      id?: number;
    };
    BookmarkRequest: {
      data: {
        exchanges?: (number | string)[];
        opportunities?: (number | string)[];
        /** @example string or id */
        owner?: number | string;
      };
    };
    BookmarkResponse: {
      data?: components["schemas"]["BookmarkResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    BookmarkResponseDataObject: {
      attributes?: components["schemas"]["Bookmark"];
      id?: number;
    };
    Category: {
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            firstname?: string;
            isActive?: boolean;
            lastname?: string;
            preferedLanguage?: string;
            registrationToken?: string;
            resetPasswordToken?: string;
            roles?: {
              data?: {
                  attributes?: {
                    code?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    description?: string;
                    name?: string;
                    permissions?: {
                      data?: {
                          attributes?: {
                            action?: string;
                            conditions?: unknown;
                            /** Format: date-time */
                            createdAt?: string;
                            createdBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            properties?: unknown;
                            role?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            subject?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                            updatedBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                          };
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    users?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                  };
                  id?: number;
                }[];
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      name?: string;
      slug?: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    CategoryExchange: {
      categories?: {
        data?: {
            attributes?: {
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: {
                    blocked?: boolean;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** Format: email */
                    email?: string;
                    firstname?: string;
                    isActive?: boolean;
                    lastname?: string;
                    preferedLanguage?: string;
                    registrationToken?: string;
                    resetPasswordToken?: string;
                    roles?: {
                      data?: {
                          attributes?: {
                            code?: string;
                            /** Format: date-time */
                            createdAt?: string;
                            createdBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            description?: string;
                            name?: string;
                            permissions?: {
                              data?: {
                                  attributes?: {
                                    action?: string;
                                    conditions?: unknown;
                                    /** Format: date-time */
                                    createdAt?: string;
                                    createdBy?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                    properties?: unknown;
                                    role?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                    subject?: string;
                                    /** Format: date-time */
                                    updatedAt?: string;
                                    updatedBy?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                  };
                                  id?: number;
                                }[];
                            };
                            /** Format: date-time */
                            updatedAt?: string;
                            updatedBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            users?: {
                              data?: {
                                  attributes?: Record<string, unknown>;
                                  id?: number;
                                }[];
                            };
                          };
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    username?: string;
                  };
                  id?: number;
                };
              };
              name?: string;
              slug?: string;
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    CategoryExchangeListResponse: {
      data?: components["schemas"]["CategoryExchangeListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    CategoryExchangeListResponseDataItem: {
      attributes?: components["schemas"]["CategoryExchange"];
      id?: number;
    };
    CategoryExchangeRequest: {
      data: {
        categories?: (number | string)[];
      };
    };
    CategoryExchangeResponse: {
      data?: components["schemas"]["CategoryExchangeResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    CategoryExchangeResponseDataObject: {
      attributes?: components["schemas"]["CategoryExchange"];
      id?: number;
    };
    CategoryListResponse: {
      data?: components["schemas"]["CategoryListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    CategoryListResponseDataItem: {
      attributes?: components["schemas"]["Category"];
      id?: number;
    };
    CategoryOpportunity: {
      categories?: {
        data?: {
            attributes?: {
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: {
                    blocked?: boolean;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** Format: email */
                    email?: string;
                    firstname?: string;
                    isActive?: boolean;
                    lastname?: string;
                    preferedLanguage?: string;
                    registrationToken?: string;
                    resetPasswordToken?: string;
                    roles?: {
                      data?: {
                          attributes?: {
                            code?: string;
                            /** Format: date-time */
                            createdAt?: string;
                            createdBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            description?: string;
                            name?: string;
                            permissions?: {
                              data?: {
                                  attributes?: {
                                    action?: string;
                                    conditions?: unknown;
                                    /** Format: date-time */
                                    createdAt?: string;
                                    createdBy?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                    properties?: unknown;
                                    role?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                    subject?: string;
                                    /** Format: date-time */
                                    updatedAt?: string;
                                    updatedBy?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                  };
                                  id?: number;
                                }[];
                            };
                            /** Format: date-time */
                            updatedAt?: string;
                            updatedBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            users?: {
                              data?: {
                                  attributes?: Record<string, unknown>;
                                  id?: number;
                                }[];
                            };
                          };
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    username?: string;
                  };
                  id?: number;
                };
              };
              name?: string;
              slug?: string;
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    CategoryOpportunityListResponse: {
      data?: components["schemas"]["CategoryOpportunityListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    CategoryOpportunityListResponseDataItem: {
      attributes?: components["schemas"]["CategoryOpportunity"];
      id?: number;
    };
    CategoryOpportunityRequest: {
      data: {
        categories?: (number | string)[];
      };
    };
    CategoryOpportunityResponse: {
      data?: components["schemas"]["CategoryOpportunityResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    CategoryOpportunityResponseDataObject: {
      attributes?: components["schemas"]["CategoryOpportunity"];
      id?: number;
    };
    CategoryQuestion: {
      categories?: {
        data?: {
            attributes?: {
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: {
                    blocked?: boolean;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** Format: email */
                    email?: string;
                    firstname?: string;
                    isActive?: boolean;
                    lastname?: string;
                    preferedLanguage?: string;
                    registrationToken?: string;
                    resetPasswordToken?: string;
                    roles?: {
                      data?: {
                          attributes?: {
                            code?: string;
                            /** Format: date-time */
                            createdAt?: string;
                            createdBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            description?: string;
                            name?: string;
                            permissions?: {
                              data?: {
                                  attributes?: {
                                    action?: string;
                                    conditions?: unknown;
                                    /** Format: date-time */
                                    createdAt?: string;
                                    createdBy?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                    properties?: unknown;
                                    role?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                    subject?: string;
                                    /** Format: date-time */
                                    updatedAt?: string;
                                    updatedBy?: {
                                      data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      };
                                    };
                                  };
                                  id?: number;
                                }[];
                            };
                            /** Format: date-time */
                            updatedAt?: string;
                            updatedBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            users?: {
                              data?: {
                                  attributes?: Record<string, unknown>;
                                  id?: number;
                                }[];
                            };
                          };
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    username?: string;
                  };
                  id?: number;
                };
              };
              name?: string;
              slug?: string;
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    CategoryQuestionListResponse: {
      data?: components["schemas"]["CategoryQuestionListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    CategoryQuestionListResponseDataItem: {
      attributes?: components["schemas"]["CategoryQuestion"];
      id?: number;
    };
    CategoryQuestionRequest: {
      data: {
        categories?: (number | string)[];
      };
    };
    CategoryQuestionResponse: {
      data?: components["schemas"]["CategoryQuestionResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    CategoryQuestionResponseDataObject: {
      attributes?: components["schemas"]["CategoryQuestion"];
      id?: number;
    };
    CategoryRequest: {
      data: {
        name?: string;
        slug?: string;
      };
    };
    CategoryResponse: {
      data?: components["schemas"]["CategoryResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    CategoryResponseDataObject: {
      attributes?: components["schemas"]["Category"];
      id?: number;
    };
    CommentListResponse: {
      data?: components["schemas"]["CommentsComment"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    CommentRequest: {
      content: string;
    };
    CommentsComment: {
      approvalStatus?: string;
      author: components["schemas"]["UserProfile"] & {
        id?: number;
      };
      /** @default false */
      blocked: boolean;
      /** @default false */
      blockedThread: boolean;
      blockReason?: string;
      content: string;
      /** Format: date-time */
      createdAt: string;
      gotThread: boolean;
      id: number;
      isAdminComment?: boolean;
      related: components["schemas"]["Question"] & {
        id: number;
      };
      removed?: boolean;
      threadOf?: {
        data: {
          attributes: Record<string, unknown>;
          id: number;
        };
      };
      /** Format: date-time */
      updatedAt: string;
    };
    CommentsCommentReport: {
      content?: string;
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** @enum {string} */
      reason: "BAD_LANGUAGE" | "DISCRIMINATION" | "OTHER";
      related?: {
        data?: {
          attributes?: {
            approvalStatus?: string;
            authorAvatar?: string;
            /** Format: email */
            authorEmail?: string;
            authorId?: string;
            authorName?: string;
            authorUser?: {
              data?: {
                attributes?: {
                  blocked?: boolean;
                  confirmationToken?: string;
                  confirmed?: boolean;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  /** Format: email */
                  email?: string;
                  provider?: string;
                  resetPasswordToken?: string;
                  role?: {
                    data?: {
                      attributes?: {
                        /** Format: date-time */
                        createdAt?: string;
                        createdBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        description?: string;
                        name?: string;
                        permissions?: {
                          data?: {
                              attributes?: {
                                action?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: {
                                      blocked?: boolean;
                                      /** Format: date-time */
                                      createdAt?: string;
                                      createdBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      /** Format: email */
                                      email?: string;
                                      firstname?: string;
                                      isActive?: boolean;
                                      lastname?: string;
                                      preferedLanguage?: string;
                                      registrationToken?: string;
                                      resetPasswordToken?: string;
                                      roles?: {
                                        data?: {
                                            attributes?: {
                                              code?: string;
                                              /** Format: date-time */
                                              createdAt?: string;
                                              createdBy?: {
                                                data?: {
                                                  attributes?: Record<string, unknown>;
                                                  id?: number;
                                                };
                                              };
                                              description?: string;
                                              name?: string;
                                              permissions?: {
                                                data?: {
                                                    attributes?: {
                                                      action?: string;
                                                      conditions?: unknown;
                                                      /** Format: date-time */
                                                      createdAt?: string;
                                                      createdBy?: {
                                                        data?: {
                                                          attributes?: Record<string, unknown>;
                                                          id?: number;
                                                        };
                                                      };
                                                      properties?: unknown;
                                                      role?: {
                                                        data?: {
                                                          attributes?: Record<string, unknown>;
                                                          id?: number;
                                                        };
                                                      };
                                                      subject?: string;
                                                      /** Format: date-time */
                                                      updatedAt?: string;
                                                      updatedBy?: {
                                                        data?: {
                                                          attributes?: Record<string, unknown>;
                                                          id?: number;
                                                        };
                                                      };
                                                    };
                                                    id?: number;
                                                  }[];
                                              };
                                              /** Format: date-time */
                                              updatedAt?: string;
                                              updatedBy?: {
                                                data?: {
                                                  attributes?: Record<string, unknown>;
                                                  id?: number;
                                                };
                                              };
                                              users?: {
                                                data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  }[];
                                              };
                                            };
                                            id?: number;
                                          }[];
                                      };
                                      /** Format: date-time */
                                      updatedAt?: string;
                                      updatedBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      username?: string;
                                    };
                                    id?: number;
                                  };
                                };
                                role?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                              };
                              id?: number;
                            }[];
                        };
                        type?: string;
                        /** Format: date-time */
                        updatedAt?: string;
                        updatedBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        users?: {
                          data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            }[];
                        };
                      };
                      id?: number;
                    };
                  };
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  username?: string;
                };
                id?: number;
              };
            };
            blocked?: boolean;
            blockedThread?: boolean;
            blockReason?: string;
            content?: string;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            isAdminComment?: boolean;
            related?: string;
            removed?: boolean;
            reports?: {
              data?: ({
                  attributes?: {
                    content?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** @enum {string} */
                    reason?: "BAD_LANGUAGE" | "DISCRIMINATION" | "OTHER";
                    related?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    resolved?: boolean;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                })[];
            };
            threadOf?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      resolved?: boolean;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    CommentsCommentReportRequest: {
      data: {
        content?: string;
        /** @enum {string} */
        reason: "BAD_LANGUAGE" | "DISCRIMINATION" | "OTHER";
        /** @example string or id */
        related?: number | string;
        resolved?: boolean;
      };
    };
    CommentsCommentReportResponse: {
      data?: components["schemas"]["CommentsCommentReportResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    CommentsCommentReportResponseDataObject: {
      attributes?: components["schemas"]["CommentsCommentReport"];
      id?: number;
    };
    CommentsCommentRequest: {
      data: {
        approvalStatus?: string;
        authorAvatar?: string;
        /** Format: email */
        authorEmail?: string;
        authorId?: string;
        authorName?: string;
        /** @example string or id */
        authorUser?: number | string;
        blocked?: boolean;
        blockedThread?: boolean;
        blockReason?: string;
        content: string;
        isAdminComment?: boolean;
        related?: string;
        removed?: boolean;
        reports?: (number | string)[];
        /** @example string or id */
        threadOf?: number | string;
      };
    };
    CommentsCommentResponse: {
      data?: components["schemas"]["CommentsCommentResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    CommentsCommentResponseDataObject: {
      attributes?: components["schemas"]["CommentsComment"];
      id?: number;
    };
    Error: {
      data?: Record<string, unknown> | Record<string, unknown>[] | null;
      error: {
        details?: Record<string, unknown>;
        message?: string;
        name?: string;
        status?: number;
      };
    };
    Exchange: {
      available_places: number;
      category?: {
        data?: {
          attributes?: {
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: {
                  blocked?: boolean;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  /** Format: email */
                  email?: string;
                  firstname?: string;
                  isActive?: boolean;
                  lastname?: string;
                  preferedLanguage?: string;
                  registrationToken?: string;
                  resetPasswordToken?: string;
                  roles?: {
                    data?: {
                        attributes?: {
                          code?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          description?: string;
                          name?: string;
                          permissions?: {
                            data?: {
                                attributes?: {
                                  action?: string;
                                  conditions?: unknown;
                                  /** Format: date-time */
                                  createdAt?: string;
                                  createdBy?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                  properties?: unknown;
                                  role?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                  subject?: string;
                                  /** Format: date-time */
                                  updatedAt?: string;
                                  updatedBy?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                };
                                id?: number;
                              }[];
                          };
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          users?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                        };
                        id?: number;
                      }[];
                  };
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  username?: string;
                };
                id?: number;
              };
            };
            name?: string;
            slug?: string;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      description: string;
      in_exchange_of?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      is_online: boolean;
      location?: string;
      owner?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            confirmationToken?: string;
            confirmed?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            provider?: string;
            resetPasswordToken?: string;
            role?: {
              data?: {
                attributes?: {
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  description?: string;
                  name?: string;
                  permissions?: {
                    data?: {
                        attributes?: {
                          action?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          role?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      }[];
                  };
                  type?: string;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  users?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                };
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      places: number;
      profile?: {
        data?: {
          attributes?: {
            about?: string;
            contacts?: {
              data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                }[];
            };
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            firstname?: string;
            image?: {
              data?: {
                attributes?: {
                  alternativeText?: string;
                  caption?: string;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  ext?: string;
                  folder?: {
                    data?: {
                      attributes?: {
                        children?: {
                          data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            }[];
                        };
                        /** Format: date-time */
                        createdAt?: string;
                        createdBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        files?: {
                          data?: {
                              attributes?: {
                                alternativeText?: string;
                                caption?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                ext?: string;
                                folder?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                folderPath?: string;
                                formats?: unknown;
                                hash?: string;
                                height?: number;
                                mime?: string;
                                name?: string;
                                previewUrl?: string;
                                provider?: string;
                                provider_metadata?: unknown;
                                related?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                                /** Format: float */
                                size?: number;
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                url?: string;
                                width?: number;
                              };
                              id?: number;
                            }[];
                        };
                        name?: string;
                        parent?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        path?: string;
                        pathId?: number;
                        /** Format: date-time */
                        updatedAt?: string;
                        updatedBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                      };
                      id?: number;
                    };
                  };
                  folderPath?: string;
                  formats?: unknown;
                  hash?: string;
                  height?: number;
                  mime?: string;
                  name?: string;
                  previewUrl?: string;
                  provider?: string;
                  provider_metadata?: unknown;
                  related?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                  /** Format: float */
                  size?: number;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  url?: string;
                  width?: number;
                };
                id?: number;
              };
            };
            lastname?: string;
            owner?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            university?: string;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      slug?: string;
      title: string;
      /** @enum {string} */
      type: "proposal" | "research";
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** Format: date */
      when?: string;
    };
    ExchangeDeal: {
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      exchange?: {
        data?: {
          attributes?: {
            available_places?: number;
            category?: {
              data?: {
                attributes?: {
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: {
                        blocked?: boolean;
                        /** Format: date-time */
                        createdAt?: string;
                        createdBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        /** Format: email */
                        email?: string;
                        firstname?: string;
                        isActive?: boolean;
                        lastname?: string;
                        preferedLanguage?: string;
                        registrationToken?: string;
                        resetPasswordToken?: string;
                        roles?: {
                          data?: {
                              attributes?: {
                                code?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                description?: string;
                                name?: string;
                                permissions?: {
                                  data?: {
                                      attributes?: {
                                        action?: string;
                                        conditions?: unknown;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        properties?: unknown;
                                        role?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        subject?: string;
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                      };
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                users?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                              };
                              id?: number;
                            }[];
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        updatedBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        username?: string;
                      };
                      id?: number;
                    };
                  };
                  name?: string;
                  slug?: string;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                };
                id?: number;
              };
            };
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            description?: string;
            in_exchange_of?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            is_online?: boolean;
            location?: string;
            owner?: {
              data?: {
                attributes?: {
                  blocked?: boolean;
                  confirmationToken?: string;
                  confirmed?: boolean;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  /** Format: email */
                  email?: string;
                  provider?: string;
                  resetPasswordToken?: string;
                  role?: {
                    data?: {
                      attributes?: {
                        /** Format: date-time */
                        createdAt?: string;
                        createdBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        description?: string;
                        name?: string;
                        permissions?: {
                          data?: {
                              attributes?: {
                                action?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                role?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                              };
                              id?: number;
                            }[];
                        };
                        type?: string;
                        /** Format: date-time */
                        updatedAt?: string;
                        updatedBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        users?: {
                          data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            }[];
                        };
                      };
                      id?: number;
                    };
                  };
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  username?: string;
                };
                id?: number;
              };
            };
            places?: number;
            profile?: {
              data?: {
                attributes?: {
                  about?: string;
                  contacts?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  firstname?: string;
                  image?: {
                    data?: {
                      attributes?: {
                        alternativeText?: string;
                        caption?: string;
                        /** Format: date-time */
                        createdAt?: string;
                        createdBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        ext?: string;
                        folder?: {
                          data?: {
                            attributes?: {
                              children?: {
                                data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  }[];
                              };
                              /** Format: date-time */
                              createdAt?: string;
                              createdBy?: {
                                data?: {
                                  attributes?: Record<string, unknown>;
                                  id?: number;
                                };
                              };
                              files?: {
                                data?: {
                                    attributes?: {
                                      alternativeText?: string;
                                      caption?: string;
                                      /** Format: date-time */
                                      createdAt?: string;
                                      createdBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      ext?: string;
                                      folder?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      folderPath?: string;
                                      formats?: unknown;
                                      hash?: string;
                                      height?: number;
                                      mime?: string;
                                      name?: string;
                                      previewUrl?: string;
                                      provider?: string;
                                      provider_metadata?: unknown;
                                      related?: {
                                        data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          }[];
                                      };
                                      /** Format: float */
                                      size?: number;
                                      /** Format: date-time */
                                      updatedAt?: string;
                                      updatedBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      url?: string;
                                      width?: number;
                                    };
                                    id?: number;
                                  }[];
                              };
                              name?: string;
                              parent?: {
                                data?: {
                                  attributes?: Record<string, unknown>;
                                  id?: number;
                                };
                              };
                              path?: string;
                              pathId?: number;
                              /** Format: date-time */
                              updatedAt?: string;
                              updatedBy?: {
                                data?: {
                                  attributes?: Record<string, unknown>;
                                  id?: number;
                                };
                              };
                            };
                            id?: number;
                          };
                        };
                        folderPath?: string;
                        formats?: unknown;
                        hash?: string;
                        height?: number;
                        mime?: string;
                        name?: string;
                        previewUrl?: string;
                        provider?: string;
                        provider_metadata?: unknown;
                        related?: {
                          data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            }[];
                        };
                        /** Format: float */
                        size?: number;
                        /** Format: date-time */
                        updatedAt?: string;
                        updatedBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        url?: string;
                        width?: number;
                      };
                      id?: number;
                    };
                  };
                  lastname?: string;
                  owner?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  university?: string;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                };
                id?: number;
              };
            };
            slug?: string;
            title?: string;
            /** @enum {string} */
            type?: "proposal" | "research";
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: date */
            when?: string;
          };
          id?: number;
        };
      };
      last_message?: {
        data?: {
          attributes?: {
            approvalStatus?: string;
            authorAvatar?: string;
            /** Format: email */
            authorEmail?: string;
            authorId?: string;
            authorName?: string;
            authorUser?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            blocked?: boolean;
            blockedThread?: boolean;
            blockReason?: string;
            content?: string;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            isAdminComment?: boolean;
            related?: string;
            removed?: boolean;
            reports?: {
              data?: ({
                  attributes?: {
                    content?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** @enum {string} */
                    reason?: "BAD_LANGUAGE" | "DISCRIMINATION" | "OTHER";
                    related?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    resolved?: boolean;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                })[];
            };
            threadOf?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      owner?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      participant?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      profile?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    ExchangeDealRequest: {
      data: {
        /** @example string or id */
        exchange?: number | string;
        /** @example string or id */
        last_message?: number | string;
        /** @example string or id */
        owner?: number | string;
        /** @example string or id */
        participant?: number | string;
        /** @example string or id */
        profile?: number | string;
      };
    };
    ExchangeDealResponse: {
      data?: components["schemas"]["ExchangeDealResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    ExchangeDealResponseDataObject: {
      attributes?: components["schemas"]["ExchangeDeal"];
      id?: number;
    };
    ExchangeListResponse: {
      data?: components["schemas"]["ExchangeListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    ExchangeListResponseDataItem: {
      attributes?: components["schemas"]["Exchange"];
      id?: number;
    };
    ExchangeRequest: {
      data: {
        available_places: number;
        /** @example string or id */
        category?: number | string;
        description: string;
        /** @example string or id */
        in_exchange_of?: number | string;
        is_online: boolean;
        location?: string;
        /** @example string or id */
        owner?: number | string;
        places: number;
        /** @example string or id */
        profile?: number | string;
        slug?: string;
        title: string;
        /** @enum {string} */
        type: "proposal" | "research";
        /** Format: date */
        when?: string;
      };
    };
    ExchangeResponse: {
      data?: components["schemas"]["ExchangeResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    ExchangeResponseDataObject: {
      attributes?: components["schemas"]["Exchange"];
      id?: number;
    };
    I18NLocale: {
      code?: string;
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            firstname?: string;
            isActive?: boolean;
            lastname?: string;
            preferedLanguage?: string;
            registrationToken?: string;
            resetPasswordToken?: string;
            roles?: {
              data?: {
                  attributes?: {
                    code?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    description?: string;
                    name?: string;
                    permissions?: {
                      data?: {
                          attributes?: {
                            action?: string;
                            conditions?: unknown;
                            /** Format: date-time */
                            createdAt?: string;
                            createdBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            properties?: unknown;
                            role?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            subject?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                            updatedBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                          };
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    users?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                  };
                  id?: number;
                }[];
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      name?: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    I18NLocaleResponse: {
      data?: components["schemas"]["I18NLocaleResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    I18NLocaleResponseDataObject: {
      attributes?: components["schemas"]["I18NLocale"];
      id?: number;
    };
    Inbox: {
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      owner?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            confirmationToken?: string;
            confirmed?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            provider?: string;
            resetPasswordToken?: string;
            role?: {
              data?: {
                attributes?: {
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  description?: string;
                  name?: string;
                  permissions?: {
                    data?: {
                        attributes?: {
                          action?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: {
                                blocked?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: email */
                                email?: string;
                                firstname?: string;
                                isActive?: boolean;
                                lastname?: string;
                                preferedLanguage?: string;
                                registrationToken?: string;
                                resetPasswordToken?: string;
                                roles?: {
                                  data?: {
                                      attributes?: {
                                        code?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        description?: string;
                                        name?: string;
                                        permissions?: {
                                          data?: {
                                              attributes?: {
                                                action?: string;
                                                conditions?: unknown;
                                                /** Format: date-time */
                                                createdAt?: string;
                                                createdBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                properties?: unknown;
                                                role?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                subject?: string;
                                                /** Format: date-time */
                                                updatedAt?: string;
                                                updatedBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                              };
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        users?: {
                                          data?: {
                                              attributes?: Record<string, unknown>;
                                              id?: number;
                                            }[];
                                        };
                                      };
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                username?: string;
                              };
                              id?: number;
                            };
                          };
                          role?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      }[];
                  };
                  type?: string;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  users?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                };
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      participant?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      thread?: {
        data?: {
          attributes?: {
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            inboxes?: {
              data?: {
                  attributes?: {
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    owner?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    participant?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    thread?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                }[];
            };
            last_message?: {
              data?: {
                attributes?: {
                  approvalStatus?: string;
                  authorAvatar?: string;
                  /** Format: email */
                  authorEmail?: string;
                  authorId?: string;
                  authorName?: string;
                  authorUser?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  blocked?: boolean;
                  blockedThread?: boolean;
                  blockReason?: string;
                  content?: string;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  isAdminComment?: boolean;
                  related?: string;
                  removed?: boolean;
                  reports?: {
                    data?: ({
                        attributes?: {
                          content?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          /** @enum {string} */
                          reason?: "BAD_LANGUAGE" | "DISCRIMINATION" | "OTHER";
                          related?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          resolved?: boolean;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      })[];
                  };
                  threadOf?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                };
                id?: number;
              };
            };
            owner?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            participants?: {
              data?: {
                  attributes?: {
                    about?: string;
                    contacts?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    firstname?: string;
                    image?: {
                      data?: {
                        attributes?: {
                          alternativeText?: string;
                          caption?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          ext?: string;
                          folder?: {
                            data?: {
                              attributes?: {
                                children?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                files?: {
                                  data?: {
                                      attributes?: {
                                        alternativeText?: string;
                                        caption?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        ext?: string;
                                        folder?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        folderPath?: string;
                                        formats?: unknown;
                                        hash?: string;
                                        height?: number;
                                        mime?: string;
                                        name?: string;
                                        previewUrl?: string;
                                        provider?: string;
                                        provider_metadata?: unknown;
                                        related?: {
                                          data?: {
                                              attributes?: Record<string, unknown>;
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: float */
                                        size?: number;
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        url?: string;
                                        width?: number;
                                      };
                                      id?: number;
                                    }[];
                                };
                                name?: string;
                                parent?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                path?: string;
                                pathId?: number;
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                              };
                              id?: number;
                            };
                          };
                          folderPath?: string;
                          formats?: unknown;
                          hash?: string;
                          height?: number;
                          mime?: string;
                          name?: string;
                          previewUrl?: string;
                          provider?: string;
                          provider_metadata?: unknown;
                          related?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: float */
                          size?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          url?: string;
                          width?: number;
                        };
                        id?: number;
                      };
                    };
                    lastname?: string;
                    owner?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    university?: string;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                }[];
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    InboxListResponse: {
      data?: components["schemas"]["InboxListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    InboxListResponseDataItem: {
      attributes?: components["schemas"]["Inbox"];
      id?: number;
    };
    InboxResponse: {
      data?: components["schemas"]["InboxResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    InboxResponseDataObject: {
      attributes?: components["schemas"]["Inbox"];
      id?: number;
    };
    Opportunity: {
      category?: {
        data?: {
          attributes?: {
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            name?: string;
            slug?: string;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      cover?: {
        data?: {
          attributes?: {
            alternativeText?: string;
            caption?: string;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            ext?: string;
            folder?: {
              data?: {
                attributes?: {
                  children?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  files?: {
                    data?: {
                        attributes?: {
                          alternativeText?: string;
                          caption?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: {
                                blocked?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: email */
                                email?: string;
                                firstname?: string;
                                isActive?: boolean;
                                lastname?: string;
                                preferedLanguage?: string;
                                registrationToken?: string;
                                resetPasswordToken?: string;
                                roles?: {
                                  data?: {
                                      attributes?: {
                                        code?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        description?: string;
                                        name?: string;
                                        permissions?: {
                                          data?: {
                                              attributes?: {
                                                action?: string;
                                                conditions?: unknown;
                                                /** Format: date-time */
                                                createdAt?: string;
                                                createdBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                properties?: unknown;
                                                role?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                subject?: string;
                                                /** Format: date-time */
                                                updatedAt?: string;
                                                updatedBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                              };
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        users?: {
                                          data?: {
                                              attributes?: Record<string, unknown>;
                                              id?: number;
                                            }[];
                                        };
                                      };
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                username?: string;
                              };
                              id?: number;
                            };
                          };
                          ext?: string;
                          folder?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          folderPath?: string;
                          formats?: unknown;
                          hash?: string;
                          height?: number;
                          mime?: string;
                          name?: string;
                          previewUrl?: string;
                          provider?: string;
                          provider_metadata?: unknown;
                          related?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: float */
                          size?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          url?: string;
                          width?: number;
                        };
                        id?: number;
                      }[];
                  };
                  name?: string;
                  parent?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  path?: string;
                  pathId?: number;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                };
                id?: number;
              };
            };
            folderPath?: string;
            formats?: unknown;
            hash?: string;
            height?: number;
            mime?: string;
            name?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: {
              data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                }[];
            };
            /** Format: float */
            size?: number;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            url?: string;
            width?: number;
          };
          id?: number;
        };
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      description: string;
      /** Format: date */
      expireAt: string;
      link?: string;
      locale?: string;
      localizations?: {
        data?: components["schemas"]["Opportunity"][];
      };
      location?: string;
      partner?: {
        data?: {
          attributes?: {
            avatar?: {
              data?: {
                attributes?: {
                  alternativeText?: string;
                  caption?: string;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  ext?: string;
                  folder?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  folderPath?: string;
                  formats?: unknown;
                  hash?: string;
                  height?: number;
                  mime?: string;
                  name?: string;
                  previewUrl?: string;
                  provider?: string;
                  provider_metadata?: unknown;
                  related?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                  /** Format: float */
                  size?: number;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  url?: string;
                  width?: number;
                };
                id?: number;
              };
            };
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            description?: string;
            /** Format: email */
            email?: string;
            location?: string;
            name?: string;
            opportunities?: {
              data?: {
                  attributes?: {
                    category?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    cover?: {
                      data?: {
                        attributes?: {
                          alternativeText?: string;
                          caption?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          ext?: string;
                          folder?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          folderPath?: string;
                          formats?: unknown;
                          hash?: string;
                          height?: number;
                          mime?: string;
                          name?: string;
                          previewUrl?: string;
                          provider?: string;
                          provider_metadata?: unknown;
                          related?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: float */
                          size?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          url?: string;
                          width?: number;
                        };
                        id?: number;
                      };
                    };
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    description?: string;
                    /** Format: date */
                    expireAt?: string;
                    link?: string;
                    locale?: string;
                    localizations?: {
                      data?: unknown[];
                    };
                    location?: string;
                    partner?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    profile?: {
                      data?: {
                        attributes?: {
                          about?: string;
                          contacts?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          firstname?: string;
                          image?: {
                            data?: {
                              attributes?: {
                                alternativeText?: string;
                                caption?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                ext?: string;
                                folder?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                folderPath?: string;
                                formats?: unknown;
                                hash?: string;
                                height?: number;
                                mime?: string;
                                name?: string;
                                previewUrl?: string;
                                provider?: string;
                                provider_metadata?: unknown;
                                related?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                                /** Format: float */
                                size?: number;
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                url?: string;
                                width?: number;
                              };
                              id?: number;
                            };
                          };
                          lastname?: string;
                          owner?: {
                            data?: {
                              attributes?: {
                                blocked?: boolean;
                                confirmationToken?: string;
                                confirmed?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: email */
                                email?: string;
                                provider?: string;
                                resetPasswordToken?: string;
                                role?: {
                                  data?: {
                                    attributes?: {
                                      /** Format: date-time */
                                      createdAt?: string;
                                      createdBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      description?: string;
                                      name?: string;
                                      permissions?: {
                                        data?: {
                                            attributes?: {
                                              action?: string;
                                              /** Format: date-time */
                                              createdAt?: string;
                                              createdBy?: {
                                                data?: {
                                                  attributes?: Record<string, unknown>;
                                                  id?: number;
                                                };
                                              };
                                              role?: {
                                                data?: {
                                                  attributes?: Record<string, unknown>;
                                                  id?: number;
                                                };
                                              };
                                              /** Format: date-time */
                                              updatedAt?: string;
                                              updatedBy?: {
                                                data?: {
                                                  attributes?: Record<string, unknown>;
                                                  id?: number;
                                                };
                                              };
                                            };
                                            id?: number;
                                          }[];
                                      };
                                      type?: string;
                                      /** Format: date-time */
                                      updatedAt?: string;
                                      updatedBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      users?: {
                                        data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          }[];
                                      };
                                    };
                                    id?: number;
                                  };
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                username?: string;
                              };
                              id?: number;
                            };
                          };
                          university?: string;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      };
                    };
                    slug?: string;
                    title?: string;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                }[];
            };
            owner?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            profile?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: date-time */
            publishedAt?: string;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            website?: string;
          };
          id?: number;
        };
      };
      profile?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      slug?: string;
      title: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    OpportunityCategory: {
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            firstname?: string;
            isActive?: boolean;
            lastname?: string;
            preferedLanguage?: string;
            registrationToken?: string;
            resetPasswordToken?: string;
            roles?: {
              data?: {
                  attributes?: {
                    code?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    description?: string;
                    name?: string;
                    permissions?: {
                      data?: {
                          attributes?: {
                            action?: string;
                            conditions?: unknown;
                            /** Format: date-time */
                            createdAt?: string;
                            createdBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            properties?: unknown;
                            role?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            subject?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                            updatedBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                          };
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    users?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                  };
                  id?: number;
                }[];
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      locale?: string;
      localizations?: {
        data?: components["schemas"]["OpportunityCategory"][];
      };
      name: string;
      slug: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    OpportunityCategoryListResponse: {
      data?: components["schemas"]["OpportunityCategoryListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    OpportunityCategoryListResponseDataItem: {
      attributes?: components["schemas"]["OpportunityCategory"];
      id?: number;
    };
    OpportunityCategoryListResponseDataItemLocalized: {
      attributes?: components["schemas"]["OpportunityCategory"];
      id?: number;
    };
    OpportunityCategoryLocalizationListResponse: {
      data?: components["schemas"]["OpportunityCategoryListResponseDataItemLocalized"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    OpportunityCategoryLocalizationRequest: {
      locale: string;
      name: string;
      slug: string;
    };
    OpportunityCategoryLocalizationResponse: {
      data?: components["schemas"]["OpportunityCategoryResponseDataObjectLocalized"];
      meta?: Record<string, unknown>;
    };
    OpportunityCategoryRequest: {
      data: {
        locale?: string;
        name: string;
        slug: string;
      };
    };
    OpportunityCategoryResponse: {
      data?: components["schemas"]["OpportunityCategoryResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    OpportunityCategoryResponseDataObject: {
      attributes?: components["schemas"]["OpportunityCategory"];
      id?: number;
    };
    OpportunityCategoryResponseDataObjectLocalized: {
      attributes?: components["schemas"]["OpportunityCategory"];
      id?: number;
    };
    OpportunityListResponse: {
      data?: components["schemas"]["OpportunityListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    OpportunityListResponseDataItem: {
      attributes?: components["schemas"]["Opportunity"];
      id?: number;
    };
    OpportunityListResponseDataItemLocalized: {
      attributes?: components["schemas"]["Opportunity"];
      id?: number;
    };
    OpportunityLocalizationListResponse: {
      data?: components["schemas"]["OpportunityListResponseDataItemLocalized"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    OpportunityLocalizationRequest: {
      /** @example string or id */
      category?: number | string;
      /** @example string or id */
      cover?: number | string;
      description: string;
      /** Format: date */
      expireAt: string;
      link?: string;
      locale: string;
      location?: string;
      /** @example string or id */
      partner?: number | string;
      /** @example string or id */
      profile?: number | string;
      slug?: string;
      title: string;
    };
    OpportunityLocalizationResponse: {
      data?: components["schemas"]["OpportunityResponseDataObjectLocalized"];
      meta?: Record<string, unknown>;
    };
    OpportunityRequest: {
      data: {
        /** @example string or id */
        category?: number | string;
        /** @example string or id */
        cover?: number | string;
        description: string;
        /** Format: date */
        expireAt: string;
        link?: string;
        locale?: string;
        location?: string;
        /** @example string or id */
        partner?: number | string;
        /** @example string or id */
        profile?: number | string;
        slug?: string;
        title: string;
      };
    };
    OpportunityResponse: {
      data?: components["schemas"]["OpportunityResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    OpportunityResponseDataObject: {
      attributes?: components["schemas"]["Opportunity"];
      id?: number;
    };
    OpportunityResponseDataObjectLocalized: {
      attributes?: components["schemas"]["Opportunity"];
      id?: number;
    };
    Partner: {
      avatar?: {
        data?: {
          attributes?: {
            alternativeText?: string;
            caption?: string;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            ext?: string;
            folder?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            folderPath?: string;
            formats?: unknown;
            hash?: string;
            height?: number;
            mime?: string;
            name?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: {
              data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                }[];
            };
            /** Format: float */
            size?: number;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            url?: string;
            width?: number;
          };
          id?: number;
        };
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      description?: string;
      /** Format: email */
      email: string;
      location?: string;
      name?: string;
      opportunities?: {
        data?: {
            attributes?: {
              category?: {
                data?: {
                  attributes?: {
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    name?: string;
                    slug?: string;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                };
              };
              cover?: {
                data?: {
                  attributes?: {
                    alternativeText?: string;
                    caption?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    ext?: string;
                    folder?: {
                      data?: {
                        attributes?: {
                          children?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          files?: {
                            data?: {
                                attributes?: {
                                  alternativeText?: string;
                                  caption?: string;
                                  /** Format: date-time */
                                  createdAt?: string;
                                  createdBy?: {
                                    data?: {
                                      attributes?: {
                                        blocked?: boolean;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        /** Format: email */
                                        email?: string;
                                        firstname?: string;
                                        isActive?: boolean;
                                        lastname?: string;
                                        preferedLanguage?: string;
                                        registrationToken?: string;
                                        resetPasswordToken?: string;
                                        roles?: {
                                          data?: {
                                              attributes?: {
                                                code?: string;
                                                /** Format: date-time */
                                                createdAt?: string;
                                                createdBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                description?: string;
                                                name?: string;
                                                permissions?: {
                                                  data?: {
                                                      attributes?: {
                                                        action?: string;
                                                        conditions?: unknown;
                                                        /** Format: date-time */
                                                        createdAt?: string;
                                                        createdBy?: {
                                                          data?: {
                                                            attributes?: Record<string, unknown>;
                                                            id?: number;
                                                          };
                                                        };
                                                        properties?: unknown;
                                                        role?: {
                                                          data?: {
                                                            attributes?: Record<string, unknown>;
                                                            id?: number;
                                                          };
                                                        };
                                                        subject?: string;
                                                        /** Format: date-time */
                                                        updatedAt?: string;
                                                        updatedBy?: {
                                                          data?: {
                                                            attributes?: Record<string, unknown>;
                                                            id?: number;
                                                          };
                                                        };
                                                      };
                                                      id?: number;
                                                    }[];
                                                };
                                                /** Format: date-time */
                                                updatedAt?: string;
                                                updatedBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                users?: {
                                                  data?: {
                                                      attributes?: Record<string, unknown>;
                                                      id?: number;
                                                    }[];
                                                };
                                              };
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        username?: string;
                                      };
                                      id?: number;
                                    };
                                  };
                                  ext?: string;
                                  folder?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                  folderPath?: string;
                                  formats?: unknown;
                                  hash?: string;
                                  height?: number;
                                  mime?: string;
                                  name?: string;
                                  previewUrl?: string;
                                  provider?: string;
                                  provider_metadata?: unknown;
                                  related?: {
                                    data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      }[];
                                  };
                                  /** Format: float */
                                  size?: number;
                                  /** Format: date-time */
                                  updatedAt?: string;
                                  updatedBy?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                  url?: string;
                                  width?: number;
                                };
                                id?: number;
                              }[];
                          };
                          name?: string;
                          parent?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          path?: string;
                          pathId?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      };
                    };
                    folderPath?: string;
                    formats?: unknown;
                    hash?: string;
                    height?: number;
                    mime?: string;
                    name?: string;
                    previewUrl?: string;
                    provider?: string;
                    provider_metadata?: unknown;
                    related?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    /** Format: float */
                    size?: number;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    url?: string;
                    width?: number;
                  };
                  id?: number;
                };
              };
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              description?: string;
              /** Format: date */
              expireAt?: string;
              link?: string;
              locale?: string;
              localizations?: {
                data?: unknown[];
              };
              location?: string;
              partner?: {
                data?: {
                  attributes?: {
                    avatar?: {
                      data?: {
                        attributes?: {
                          alternativeText?: string;
                          caption?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          ext?: string;
                          folder?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          folderPath?: string;
                          formats?: unknown;
                          hash?: string;
                          height?: number;
                          mime?: string;
                          name?: string;
                          previewUrl?: string;
                          provider?: string;
                          provider_metadata?: unknown;
                          related?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: float */
                          size?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          url?: string;
                          width?: number;
                        };
                        id?: number;
                      };
                    };
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    description?: string;
                    /** Format: email */
                    email?: string;
                    location?: string;
                    name?: string;
                    opportunities?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    owner?: {
                      data?: {
                        attributes?: {
                          blocked?: boolean;
                          confirmationToken?: string;
                          confirmed?: boolean;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          /** Format: email */
                          email?: string;
                          provider?: string;
                          resetPasswordToken?: string;
                          role?: {
                            data?: {
                              attributes?: {
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                description?: string;
                                name?: string;
                                permissions?: {
                                  data?: {
                                      attributes?: {
                                        action?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        role?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                      };
                                      id?: number;
                                    }[];
                                };
                                type?: string;
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                users?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                              };
                              id?: number;
                            };
                          };
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          username?: string;
                        };
                        id?: number;
                      };
                    };
                    profile?: {
                      data?: {
                        attributes?: {
                          about?: string;
                          contacts?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          firstname?: string;
                          image?: {
                            data?: {
                              attributes?: {
                                alternativeText?: string;
                                caption?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                ext?: string;
                                folder?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                folderPath?: string;
                                formats?: unknown;
                                hash?: string;
                                height?: number;
                                mime?: string;
                                name?: string;
                                previewUrl?: string;
                                provider?: string;
                                provider_metadata?: unknown;
                                related?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                                /** Format: float */
                                size?: number;
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                url?: string;
                                width?: number;
                              };
                              id?: number;
                            };
                          };
                          lastname?: string;
                          owner?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          university?: string;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      };
                    };
                    /** Format: date-time */
                    publishedAt?: string;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    website?: string;
                  };
                  id?: number;
                };
              };
              profile?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              slug?: string;
              title?: string;
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      owner?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      profile?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** Format: date-time */
      publishedAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      website?: string;
    };
    PartnerListResponse: {
      data?: components["schemas"]["PartnerListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    PartnerListResponseDataItem: {
      attributes?: components["schemas"]["Partner"];
      id?: number;
    };
    PartnerRequest: {
      data: {
        /** @example string or id */
        avatar?: number | string;
        description?: string;
        /** Format: email */
        email: string;
        location?: string;
        name?: string;
        opportunities?: (number | string)[];
        /** @example string or id */
        owner?: number | string;
        /** @example string or id */
        profile?: number | string;
        website?: string;
      };
    };
    PartnerResponse: {
      data?: components["schemas"]["PartnerResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    PartnerResponseDataObject: {
      attributes?: components["schemas"]["Partner"];
      id?: number;
    };
    "Passwordless-EmailSent": {
      email?: string;
      /** @example true */
      sent?: boolean;
      username?: string | null;
    };
    "Passwordless-SendLinkRequest": {
      /**
       * @description context of authentification
       * @example {
       *   "currentUrl": "localhost"
       * }
       */
      context?: Record<string, unknown>;
      /**
       * @description the user email
       * @example foo@bar.com
       */
      email?: string;
      /**
       * @description username for new user
       * @example foo
       */
      username?: string;
    };
    "Passwordless-User": components["schemas"]["Users-Permissions-UserRegistration"] & {
      context?: Record<string, unknown>;
    };
    Question: {
      accepted_answer?: {
        data?: {
          attributes?: {
            approvalStatus?: string;
            authorAvatar?: string;
            /** Format: email */
            authorEmail?: string;
            authorId?: string;
            authorName?: string;
            authorUser?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            blocked?: boolean;
            blockedThread?: boolean;
            blockReason?: string;
            content?: string;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            isAdminComment?: boolean;
            related?: string;
            removed?: boolean;
            reports?: {
              data?: ({
                  attributes?: {
                    content?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** @enum {string} */
                    reason?: "BAD_LANGUAGE" | "DISCRIMINATION" | "OTHER";
                    related?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    resolved?: boolean;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                })[];
            };
            threadOf?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      answer_count?: number;
      category?: {
        data?: {
          attributes?: {
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            name?: string;
            slug?: string;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      /** Format: date-time */
      edited_at?: string;
      is_accepted?: boolean;
      /** Format: date-time */
      last_activity?: string;
      owner?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            confirmationToken?: string;
            confirmed?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            provider?: string;
            resetPasswordToken?: string;
            role?: {
              data?: {
                attributes?: {
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  description?: string;
                  name?: string;
                  permissions?: {
                    data?: {
                        attributes?: {
                          action?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: {
                                blocked?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: email */
                                email?: string;
                                firstname?: string;
                                isActive?: boolean;
                                lastname?: string;
                                preferedLanguage?: string;
                                registrationToken?: string;
                                resetPasswordToken?: string;
                                roles?: {
                                  data?: {
                                      attributes?: {
                                        code?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        description?: string;
                                        name?: string;
                                        permissions?: {
                                          data?: {
                                              attributes?: {
                                                action?: string;
                                                conditions?: unknown;
                                                /** Format: date-time */
                                                createdAt?: string;
                                                createdBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                properties?: unknown;
                                                role?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                subject?: string;
                                                /** Format: date-time */
                                                updatedAt?: string;
                                                updatedBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                              };
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        users?: {
                                          data?: {
                                              attributes?: Record<string, unknown>;
                                              id?: number;
                                            }[];
                                        };
                                      };
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                username?: string;
                              };
                              id?: number;
                            };
                          };
                          role?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      }[];
                  };
                  type?: string;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  users?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                };
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      profile?: {
        data?: {
          attributes?: {
            about?: string;
            contacts?: {
              data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                }[];
            };
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            firstname?: string;
            image?: {
              data?: {
                attributes?: {
                  alternativeText?: string;
                  caption?: string;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  ext?: string;
                  folder?: {
                    data?: {
                      attributes?: {
                        children?: {
                          data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            }[];
                        };
                        /** Format: date-time */
                        createdAt?: string;
                        createdBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        files?: {
                          data?: {
                              attributes?: {
                                alternativeText?: string;
                                caption?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                ext?: string;
                                folder?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                folderPath?: string;
                                formats?: unknown;
                                hash?: string;
                                height?: number;
                                mime?: string;
                                name?: string;
                                previewUrl?: string;
                                provider?: string;
                                provider_metadata?: unknown;
                                related?: {
                                  data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    }[];
                                };
                                /** Format: float */
                                size?: number;
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                url?: string;
                                width?: number;
                              };
                              id?: number;
                            }[];
                        };
                        name?: string;
                        parent?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        path?: string;
                        pathId?: number;
                        /** Format: date-time */
                        updatedAt?: string;
                        updatedBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                      };
                      id?: number;
                    };
                  };
                  folderPath?: string;
                  formats?: unknown;
                  hash?: string;
                  height?: number;
                  mime?: string;
                  name?: string;
                  previewUrl?: string;
                  provider?: string;
                  provider_metadata?: unknown;
                  related?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                  /** Format: float */
                  size?: number;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  url?: string;
                  width?: number;
                };
                id?: number;
              };
            };
            lastname?: string;
            owner?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            university?: string;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      slug?: string;
      title: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    QuestionListResponse: {
      data?: components["schemas"]["QuestionListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    QuestionListResponseDataItem: {
      attributes?: components["schemas"]["Question"];
      id?: number;
    };
    QuestionRequest: {
      data: {
        /** @example string or id */
        accepted_answer?: number | string;
        answer_count?: number;
        /** @example string or id */
        category?: number | string;
        /** Format: date-time */
        edited_at?: string;
        is_accepted?: boolean;
        /** Format: date-time */
        last_activity?: string;
        /** @example string or id */
        owner?: number | string;
        /** @example string or id */
        profile?: number | string;
        slug?: string;
        title: string;
      };
    };
    QuestionResponse: {
      data?: components["schemas"]["QuestionResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    QuestionResponseDataObject: {
      attributes?: components["schemas"]["Question"];
      id?: number;
    };
    /** @description Set entities to a specific set. Using set will overwrite all existing connections to other entities. */
    SetRelation: {
      set?: OneOf<[number[], {
          id: number;
        }[]]>;
    };
    Tag: {
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            firstname?: string;
            isActive?: boolean;
            lastname?: string;
            preferedLanguage?: string;
            registrationToken?: string;
            resetPasswordToken?: string;
            roles?: {
              data?: {
                  attributes?: {
                    code?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    description?: string;
                    name?: string;
                    permissions?: {
                      data?: {
                          attributes?: {
                            action?: string;
                            conditions?: unknown;
                            /** Format: date-time */
                            createdAt?: string;
                            createdBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            properties?: unknown;
                            role?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                            subject?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                            updatedBy?: {
                              data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              };
                            };
                          };
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    users?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                  };
                  id?: number;
                }[];
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      locale?: string;
      localizations?: {
        data?: components["schemas"]["Tag"][];
      };
      name: string;
      slug?: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    TagListResponse: {
      data?: components["schemas"]["TagListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    TagListResponseDataItem: {
      attributes?: components["schemas"]["Tag"];
      id?: number;
    };
    TagListResponseDataItemLocalized: {
      attributes?: components["schemas"]["Tag"];
      id?: number;
    };
    TagLocalizationListResponse: {
      data?: components["schemas"]["TagListResponseDataItemLocalized"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    TagLocalizationRequest: {
      locale: string;
      name: string;
      slug?: string;
    };
    TagLocalizationResponse: {
      data?: components["schemas"]["TagResponseDataObjectLocalized"];
      meta?: Record<string, unknown>;
    };
    TagRequest: {
      data: {
        locale?: string;
        name: string;
        slug?: string;
      };
    };
    TagResponse: {
      data?: components["schemas"]["TagResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    TagResponseDataObject: {
      attributes?: components["schemas"]["Tag"];
      id?: number;
    };
    TagResponseDataObjectLocalized: {
      attributes?: components["schemas"]["Tag"];
      id?: number;
    };
    Thread: {
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      inboxes?: {
        data?: {
            attributes?: {
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              owner?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              participant?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              thread?: {
                data?: {
                  attributes?: {
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    inboxes?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    last_message?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    owner?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    participants?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                };
              };
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      last_message?: {
        data?: {
          attributes?: {
            approvalStatus?: string;
            authorAvatar?: string;
            /** Format: email */
            authorEmail?: string;
            authorId?: string;
            authorName?: string;
            authorUser?: {
              data?: {
                attributes?: {
                  blocked?: boolean;
                  confirmationToken?: string;
                  confirmed?: boolean;
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  /** Format: email */
                  email?: string;
                  provider?: string;
                  resetPasswordToken?: string;
                  role?: {
                    data?: {
                      attributes?: {
                        /** Format: date-time */
                        createdAt?: string;
                        createdBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        description?: string;
                        name?: string;
                        permissions?: {
                          data?: {
                              attributes?: {
                                action?: string;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: {
                                      blocked?: boolean;
                                      /** Format: date-time */
                                      createdAt?: string;
                                      createdBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      /** Format: email */
                                      email?: string;
                                      firstname?: string;
                                      isActive?: boolean;
                                      lastname?: string;
                                      preferedLanguage?: string;
                                      registrationToken?: string;
                                      resetPasswordToken?: string;
                                      roles?: {
                                        data?: {
                                            attributes?: {
                                              code?: string;
                                              /** Format: date-time */
                                              createdAt?: string;
                                              createdBy?: {
                                                data?: {
                                                  attributes?: Record<string, unknown>;
                                                  id?: number;
                                                };
                                              };
                                              description?: string;
                                              name?: string;
                                              permissions?: {
                                                data?: {
                                                    attributes?: {
                                                      action?: string;
                                                      conditions?: unknown;
                                                      /** Format: date-time */
                                                      createdAt?: string;
                                                      createdBy?: {
                                                        data?: {
                                                          attributes?: Record<string, unknown>;
                                                          id?: number;
                                                        };
                                                      };
                                                      properties?: unknown;
                                                      role?: {
                                                        data?: {
                                                          attributes?: Record<string, unknown>;
                                                          id?: number;
                                                        };
                                                      };
                                                      subject?: string;
                                                      /** Format: date-time */
                                                      updatedAt?: string;
                                                      updatedBy?: {
                                                        data?: {
                                                          attributes?: Record<string, unknown>;
                                                          id?: number;
                                                        };
                                                      };
                                                    };
                                                    id?: number;
                                                  }[];
                                              };
                                              /** Format: date-time */
                                              updatedAt?: string;
                                              updatedBy?: {
                                                data?: {
                                                  attributes?: Record<string, unknown>;
                                                  id?: number;
                                                };
                                              };
                                              users?: {
                                                data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  }[];
                                              };
                                            };
                                            id?: number;
                                          }[];
                                      };
                                      /** Format: date-time */
                                      updatedAt?: string;
                                      updatedBy?: {
                                        data?: {
                                          attributes?: Record<string, unknown>;
                                          id?: number;
                                        };
                                      };
                                      username?: string;
                                    };
                                    id?: number;
                                  };
                                };
                                role?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                              };
                              id?: number;
                            }[];
                        };
                        type?: string;
                        /** Format: date-time */
                        updatedAt?: string;
                        updatedBy?: {
                          data?: {
                            attributes?: Record<string, unknown>;
                            id?: number;
                          };
                        };
                        users?: {
                          data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            }[];
                        };
                      };
                      id?: number;
                    };
                  };
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  username?: string;
                };
                id?: number;
              };
            };
            blocked?: boolean;
            blockedThread?: boolean;
            blockReason?: string;
            content?: string;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            isAdminComment?: boolean;
            related?: string;
            removed?: boolean;
            reports?: {
              data?: ({
                  attributes?: {
                    content?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    /** @enum {string} */
                    reason?: "BAD_LANGUAGE" | "DISCRIMINATION" | "OTHER";
                    related?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    resolved?: boolean;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                  };
                  id?: number;
                })[];
            };
            threadOf?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
          };
          id?: number;
        };
      };
      owner?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      participants?: {
        data?: {
            attributes?: {
              about?: string;
              contacts?: {
                data?: {
                    attributes?: Record<string, unknown>;
                    id?: number;
                  }[];
              };
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              firstname?: string;
              image?: {
                data?: {
                  attributes?: {
                    alternativeText?: string;
                    caption?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    ext?: string;
                    folder?: {
                      data?: {
                        attributes?: {
                          children?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          files?: {
                            data?: {
                                attributes?: {
                                  alternativeText?: string;
                                  caption?: string;
                                  /** Format: date-time */
                                  createdAt?: string;
                                  createdBy?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                  ext?: string;
                                  folder?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                  folderPath?: string;
                                  formats?: unknown;
                                  hash?: string;
                                  height?: number;
                                  mime?: string;
                                  name?: string;
                                  previewUrl?: string;
                                  provider?: string;
                                  provider_metadata?: unknown;
                                  related?: {
                                    data?: {
                                        attributes?: Record<string, unknown>;
                                        id?: number;
                                      }[];
                                  };
                                  /** Format: float */
                                  size?: number;
                                  /** Format: date-time */
                                  updatedAt?: string;
                                  updatedBy?: {
                                    data?: {
                                      attributes?: Record<string, unknown>;
                                      id?: number;
                                    };
                                  };
                                  url?: string;
                                  width?: number;
                                };
                                id?: number;
                              }[];
                          };
                          name?: string;
                          parent?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          path?: string;
                          pathId?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      };
                    };
                    folderPath?: string;
                    formats?: unknown;
                    hash?: string;
                    height?: number;
                    mime?: string;
                    name?: string;
                    previewUrl?: string;
                    provider?: string;
                    provider_metadata?: unknown;
                    related?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    /** Format: float */
                    size?: number;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    url?: string;
                    width?: number;
                  };
                  id?: number;
                };
              };
              lastname?: string;
              owner?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              university?: string;
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    ThreadListResponse: {
      data?: components["schemas"]["ThreadListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    ThreadListResponseDataItem: {
      attributes?: components["schemas"]["Thread"];
      id?: number;
    };
    ThreadRequest: {
      data: {
        inboxes?: (number | string)[];
        /** @example string or id */
        last_message?: number | string;
        /** @example string or id */
        owner?: number | string;
        participants?: (number | string)[];
      };
    };
    ThreadResponse: {
      data?: components["schemas"]["ThreadResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    ThreadResponseDataObject: {
      attributes?: components["schemas"]["Thread"];
      id?: number;
    };
    UploadFile: {
      alternativeText?: string;
      caption?: string;
      /** Format: date-time */
      createdAt?: string;
      ext?: string;
      formats?: number;
      hash?: string;
      /** Format: integer */
      height?: number;
      id?: number;
      mime?: string;
      name?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: Record<string, unknown>;
      /** Format: double */
      size?: number;
      /** Format: date-time */
      updatedAt?: string;
      url?: string;
      /** Format: integer */
      width?: number;
    };
    UserProfile: {
      about?: string;
      contacts?: {
        data?: {
            attributes?: {
              about?: string;
              contacts?: {
                data?: {
                    attributes?: Record<string, unknown>;
                    id?: number;
                  }[];
              };
              /** Format: date-time */
              createdAt?: string;
              createdBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              firstname?: string;
              image?: {
                data?: {
                  attributes?: {
                    alternativeText?: string;
                    caption?: string;
                    /** Format: date-time */
                    createdAt?: string;
                    createdBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    ext?: string;
                    folder?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    folderPath?: string;
                    formats?: unknown;
                    hash?: string;
                    height?: number;
                    mime?: string;
                    name?: string;
                    previewUrl?: string;
                    provider?: string;
                    provider_metadata?: unknown;
                    related?: {
                      data?: {
                          attributes?: Record<string, unknown>;
                          id?: number;
                        }[];
                    };
                    /** Format: float */
                    size?: number;
                    /** Format: date-time */
                    updatedAt?: string;
                    updatedBy?: {
                      data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      };
                    };
                    url?: string;
                    width?: number;
                  };
                  id?: number;
                };
              };
              lastname?: string;
              owner?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
              university?: string;
              /** Format: date-time */
              updatedAt?: string;
              updatedBy?: {
                data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                };
              };
            };
            id?: number;
          }[];
      };
      /** Format: date-time */
      createdAt?: string;
      createdBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
      firstname: string;
      image?: {
        data?: {
          attributes?: {
            alternativeText?: string;
            caption?: string;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            ext?: string;
            folder?: {
              data?: {
                attributes?: {
                  children?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  files?: {
                    data?: {
                        attributes?: {
                          alternativeText?: string;
                          caption?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: {
                                blocked?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                createdBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                /** Format: email */
                                email?: string;
                                firstname?: string;
                                isActive?: boolean;
                                lastname?: string;
                                preferedLanguage?: string;
                                registrationToken?: string;
                                resetPasswordToken?: string;
                                roles?: {
                                  data?: {
                                      attributes?: {
                                        code?: string;
                                        /** Format: date-time */
                                        createdAt?: string;
                                        createdBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        description?: string;
                                        name?: string;
                                        permissions?: {
                                          data?: {
                                              attributes?: {
                                                action?: string;
                                                conditions?: unknown;
                                                /** Format: date-time */
                                                createdAt?: string;
                                                createdBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                properties?: unknown;
                                                role?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                                subject?: string;
                                                /** Format: date-time */
                                                updatedAt?: string;
                                                updatedBy?: {
                                                  data?: {
                                                    attributes?: Record<string, unknown>;
                                                    id?: number;
                                                  };
                                                };
                                              };
                                              id?: number;
                                            }[];
                                        };
                                        /** Format: date-time */
                                        updatedAt?: string;
                                        updatedBy?: {
                                          data?: {
                                            attributes?: Record<string, unknown>;
                                            id?: number;
                                          };
                                        };
                                        users?: {
                                          data?: {
                                              attributes?: Record<string, unknown>;
                                              id?: number;
                                            }[];
                                        };
                                      };
                                      id?: number;
                                    }[];
                                };
                                /** Format: date-time */
                                updatedAt?: string;
                                updatedBy?: {
                                  data?: {
                                    attributes?: Record<string, unknown>;
                                    id?: number;
                                  };
                                };
                                username?: string;
                              };
                              id?: number;
                            };
                          };
                          ext?: string;
                          folder?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          folderPath?: string;
                          formats?: unknown;
                          hash?: string;
                          height?: number;
                          mime?: string;
                          name?: string;
                          previewUrl?: string;
                          provider?: string;
                          provider_metadata?: unknown;
                          related?: {
                            data?: {
                                attributes?: Record<string, unknown>;
                                id?: number;
                              }[];
                          };
                          /** Format: float */
                          size?: number;
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          url?: string;
                          width?: number;
                        };
                        id?: number;
                      }[];
                  };
                  name?: string;
                  parent?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  path?: string;
                  pathId?: number;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                };
                id?: number;
              };
            };
            folderPath?: string;
            formats?: unknown;
            hash?: string;
            height?: number;
            mime?: string;
            name?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: {
              data?: {
                  attributes?: Record<string, unknown>;
                  id?: number;
                }[];
            };
            /** Format: float */
            size?: number;
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            url?: string;
            width?: number;
          };
          id?: number;
        };
      };
      lastname: string;
      owner?: {
        data?: {
          attributes?: {
            blocked?: boolean;
            confirmationToken?: string;
            confirmed?: boolean;
            /** Format: date-time */
            createdAt?: string;
            createdBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            /** Format: email */
            email?: string;
            provider?: string;
            resetPasswordToken?: string;
            role?: {
              data?: {
                attributes?: {
                  /** Format: date-time */
                  createdAt?: string;
                  createdBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  description?: string;
                  name?: string;
                  permissions?: {
                    data?: {
                        attributes?: {
                          action?: string;
                          /** Format: date-time */
                          createdAt?: string;
                          createdBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          role?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                          /** Format: date-time */
                          updatedAt?: string;
                          updatedBy?: {
                            data?: {
                              attributes?: Record<string, unknown>;
                              id?: number;
                            };
                          };
                        };
                        id?: number;
                      }[];
                  };
                  type?: string;
                  /** Format: date-time */
                  updatedAt?: string;
                  updatedBy?: {
                    data?: {
                      attributes?: Record<string, unknown>;
                      id?: number;
                    };
                  };
                  users?: {
                    data?: {
                        attributes?: Record<string, unknown>;
                        id?: number;
                      }[];
                  };
                };
                id?: number;
              };
            };
            /** Format: date-time */
            updatedAt?: string;
            updatedBy?: {
              data?: {
                attributes?: Record<string, unknown>;
                id?: number;
              };
            };
            username?: string;
          };
          id?: number;
        };
      };
      university?: string;
      /** Format: date-time */
      updatedAt?: string;
      updatedBy?: {
        data?: {
          attributes?: Record<string, unknown>;
          id?: number;
        };
      };
    };
    UserProfileListResponse: {
      data?: components["schemas"]["UserProfileListResponseDataItem"][];
      meta?: {
        pagination?: {
          page?: number;
          pageCount?: number;
          pageSize?: number;
          total?: number;
        };
      };
    };
    UserProfileListResponseDataItem: {
      attributes?: components["schemas"]["UserProfile"];
      id?: number;
    };
    UserProfileRequest: {
      data: {
        data?: {
          about?: string;
          contacts?: (number | string)[];
          firstname: string;
          /** @example string or id */
          image?: number | string;
          lastname: string;
          /** @example string or id */
          owner?: number | string;
          university?: string;
        };
        image?: components["schemas"]["SetRelation"];
      };
    };
    UserProfileResponse: {
      data?: components["schemas"]["UserProfileResponseDataObject"];
      meta?: Record<string, unknown>;
    };
    UserProfileResponseDataObject: {
      attributes?: components["schemas"]["UserProfile"];
      id?: number;
    };
    "Users-Permissions-PermissionsTree": {
      [key: string]: {
        /** @description every controller of the api */
        controllers?: {
          [key: string]: {
            [key: string]: {
              enabled?: boolean;
              policy?: string;
            };
          };
        };
      };
    };
    "Users-Permissions-Role": {
      /** Format: date-time */
      createdAt?: string;
      description?: string;
      id?: number;
      name?: string;
      type?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    "Users-Permissions-User": {
      /** @example false */
      blocked?: boolean;
      /** @example true */
      confirmed?: boolean;
      /**
       * Format: date-time
       * @example 2022-06-02T08:32:06.258Z
       */
      createdAt?: string;
      /** @example foo.bar@strapi.io */
      email?: string;
      /** @example 1 */
      id?: number;
      /** @example local */
      provider?: string;
      /**
       * Format: date-time
       * @example 2022-06-02T08:32:06.267Z
       */
      updatedAt?: string;
      /** @example foo.bar */
      username?: string;
    };
    "Users-Permissions-UserRegistration": {
      /** @example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c */
      jwt?: string;
      user?: components["schemas"]["Users-Permissions-User"];
    };
  };
  responses: {
    /** @description Bad Request */
    400: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Unauthorized */
    401: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Forbidden */
    403: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Not Found */
    404: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Internal Server Error */
    500: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
  };
  parameters: {
    FieldsQuery?: string;
    FiltersQuery?: string;
    LocaleQuery?: string;
    PaginationByOffsetQuery?: string;
    PaginationByPageQuery?: string;
    PopulateQuery?: string;
    SortQuery?: string;
  };
  requestBodies: {
    "Users-Permissions-RoleRequest": {
      content: {
        /**
         * @example {
         *   "name": "foo",
         *   "description": "role foo",
         *   "permissions": {
         *     "api::content-type.content-type": {
         *       "controllers": {
         *         "controllerA": {
         *           "find": {
         *             "enabled": true
         *           }
         *         }
         *       }
         *     }
         *   }
         * }
         */
        "application/json": {
          description?: string;
          name?: string;
          permissions?: components["schemas"]["Users-Permissions-PermissionsTree"];
          type?: string;
        };
      };
    };
  };
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  "get/answer/{id}": {
    parameters: {
      path: {
        /** @description The answer id */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/answer/{id}": {
    parameters: {
      path: {
        /** @description The answer id */
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "delete/answer/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/bookmark/exchanges": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/bookmark/exchanges/{id}": {
    parameters: {
      path: {
        /** @description The exchanges id */
        id: number;
      };
    };
    responses: {
      /** @description Found */
      200: {
        content: never;
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/bookmark/exchanges/{id}": {
    parameters: {
      path: {
        /** @description The exchanges id */
        id: number;
      };
    };
    responses: {
      /** @description Add to bookmarks */
      200: {
        content: never;
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "delete/bookmark/exchanges/{id}": {
    parameters: {
      path: {
        /** @description The exchanges id */
        id: number;
      };
    };
    responses: {
      /** @description Remove from bookmarks */
      200: {
        content: never;
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/bookmark/opportunities": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/bookmark/opportunities/{id}": {
    parameters: {
      path: {
        /** @description The opportunity id */
        id: number;
      };
    };
    responses: {
      /** @description Found */
      200: {
        content: never;
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/bookmark/opportunities/{id}": {
    parameters: {
      path: {
        /** @description The opportunity id */
        id: number;
      };
    };
    responses: {
      /** @description Add to bookmarks */
      200: {
        content: never;
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "delete/bookmark/opportunities/{id}": {
    parameters: {
      path: {
        /** @description The opportunity id */
        id: number;
      };
    };
    responses: {
      /** @description Remove from bookmarks */
      200: {
        content: never;
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/bookmarks": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["BookmarkListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/bookmarks": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["BookmarkRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["BookmarkResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/bookmarks/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["BookmarkResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/bookmarks/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BookmarkRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["BookmarkResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/bookmarks/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/categories": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/categories": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/categories;exchange": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryExchangeResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/categories;opportunity": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryOpportunityResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/categories;question": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryQuestionResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/categories/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/categories/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/categories/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/category-exchange": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryExchangeResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/category-exchange": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryExchangeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryExchangeResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/category-exchange": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/category-opportunity": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryOpportunityResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/category-opportunity": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryOpportunityRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryOpportunityResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/category-opportunity": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/category-question": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryQuestionResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/category-question": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryQuestionRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryQuestionResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/category-question": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/comments/{relation}/comment/{commentId}": {
    parameters: {
      path: {
        relation: number;
        commentId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommentsCommentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsCommentResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/comments/{relation}/comment/{commentId}": {
    parameters: {
      path: {
        relation: number;
        commentId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/comments/{relation}/comment/{commentId}/report-abuse": {
    parameters: {
      path: {
        relation: number;
        commentId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommentsCommentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsCommentResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/deals/{id}/messages": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Pagination */
        pagination?: {
          page?: number;
          pageSize?: number;
        };
      };
      path: {
        /** @description The deal id */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/deals/{id}/messages": {
    parameters: {
      path: {
        /** @description The deal id */
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/deals/{id}/messages/{id}": {
    parameters: {
      path: {
        /** @description The message id */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "delete/deals/{id}/messages/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/exchange-deals": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExchangeDealRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeDealResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/exchange-deals/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeDealResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/exchanges": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/exchanges": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExchangeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/exchanges/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/exchanges/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExchangeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/exchanges/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/exchanges/{id}/deals": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
      };
      path: {
        /** @description The exchange id */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["ExchangeDealResponseDataObject"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/i18n/locales": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["I18NLocaleResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/inbox/{id}/messages": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Pagination */
        pagination?: {
          page?: number;
          pageSize?: number;
        };
      };
      path: {
        /** @description The deal id */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/inbox/{id}/messages": {
    parameters: {
      path: {
        /** @description The deal id */
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/inbox/{id}/messages/{id}": {
    parameters: {
      path: {
        /** @description The message id */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "delete/inbox/{id}/messages/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/inbox/to/{profile_id}": {
    parameters: {
      path: {
        /** @description The profile id */
        profile_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["InboxResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/inboxes": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["InboxListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/inboxes/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["InboxResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/my/exchange": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExchangeListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/opportunities": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/opportunities": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/opportunities/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/opportunities/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/opportunities/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/opportunities/{id}/localizations": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityLocalizationRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityLocalizationResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/opportunity-categories": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityCategoryListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/opportunity-categories/{id}/localizations": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityCategoryLocalizationRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OpportunityCategoryLocalizationResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/partners": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PartnerListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/partners": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PartnerRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PartnerResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/partners/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PartnerResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/partners/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PartnerRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PartnerResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/partners/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/partners/me": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PartnerResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "put/partners/me": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PartnerRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PartnerResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/question/{id}/answers": {
    parameters: {
      path: {
        /** @description The question id one answers */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/question/{id}/answers": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/question/{id}/answers/count": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/questions": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["QuestionListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/questions": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuestionRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["QuestionResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/questions/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["QuestionResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/questions/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuestionRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["QuestionResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/questions/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/tags": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TagListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/tags": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TagRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TagResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/tags/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TagResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/tags/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TagRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TagResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/tags/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/tags/{id}/localizations": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TagLocalizationRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TagLocalizationResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/thread/{id}/messages": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Pagination */
        pagination?: {
          page?: number;
          pageSize?: number;
        };
      };
      path: {
        /** @description The thread id */
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "post/thread/{id}/messages": {
    parameters: {
      path: {
        /** @description The thread id */
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CommentsComment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/threads": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ThreadListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/threads": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ThreadRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ThreadResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/threads/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ThreadResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/threads/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ThreadRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ThreadResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/threads/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/user-profiles": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: string;
        /** @description Return page/pageSize (default: true) */
        "pagination[withCount]"?: boolean;
        /** @description Page number (default: 0) */
        "pagination[page]"?: number;
        /** @description Page size (default: 25) */
        "pagination[pageSize]"?: number;
        /** @description Offset value (default: 0) */
        "pagination[start]"?: number;
        /** @description Number of entities to return (default: 25) */
        "pagination[limit]"?: number;
        /** @description Fields to return (ex: title,author) */
        fields?: string;
        /** @description Relations to return */
        populate?: string;
        /** @description Filters to apply */
        filters?: Record<string, unknown>;
        /** @description Locale to apply */
        locale?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileListResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "post/user-profiles": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserProfileRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/user-profiles/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "put/user-profiles/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserProfileRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "delete/user-profiles/{id}": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  "get/user-profiles/me": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "put/user-profiles/me": {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserProfileRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
  "get/user-profiles/me/contacts": {
    parameters: {
      query?: {
        /** @description Sort by attributes ascending (asc) or descending (desc) */
        sort?: components["parameters"]["SortQuery"];
        /** @description Pagination */
        pagination?: {
          page?: number;
          pageSize?: number;
        };
        /** @description Relations to return */
        populate?: components["parameters"]["PopulateQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileListResponse"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      500: components["responses"]["500"];
    };
  };
}
